# to avoid tmux-sensible for overwriting this with reattach-to-user-session and causing issues
# see https://unix.stackexchange.com/questions/791132/why-is-tmux-picking-up-sh-as-shell-instead-of-my-normal-login-shell-bash
set-option -g default-command "$SHELL" 

# look good 
set -g default-terminal "screen-256color" 

# a mouse 
# set -g mode-mouse on 
# setw -g mouse-select-window on 
# setw -g mouse-select-pane on 

# standard operating system mouse support instead
#set -g mouse-mode off

# Enable mouse scrolling in pane, automatic copy mode
set -g mouse on

# act like vim 
setw -g mode-keys vi 
bind h select-pane -L 
bind j select-pane -D 
bind k select-pane -U 
bind l select-pane -R 
bind-key -r C-h select-window -t :- 
bind-key -r C-l select-window -t :+ 
# unbind [ 
bind ` copy-mode 
# unbind p 
# bind p paste-buffer 
bind -T copy-mode-vi v send-keys -X begin-selection 
bind -T copy-mode-vi y send-keys -X copy-selection 

# TODO: this only works in linux, right? xclip, etc
# whatever you copy in Tmux buffer will also land into system clipboard.
#bind -T copy-mode-vi y send -X copy-pipe "xclip -sel clip -i"
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -sel clip -i"

set-option -g set-clipboard on

# avoid annoying delay in VIM
set -s escape-time 0

# List of plugins - press <prefix>+I to fetch and install
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'     # enable copy paste in osx, linux, cygwin

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

#############
# TMS START #
#############
# tmux-sessionizer in Rust loosely based on the Primeagen script: https://github.com/jrmoulton/tmux-sessionizer

# display-popup was added between 3.1c and 3.2
# 1. show other active sessions with a fuzzy finder 
# 2. similar to tms switch, you can show other active windows in the current session 
if-shell "tmux-version ' >= 3.2'" \
    '\
    bind C-j display-popup -E "tms switch"; \
    bind C-w display-popup -E "tms windows"; \
    ';
# automatically rename the active session along with the directory name and the active directory inside all the panes in the active session will be changed to the renamed directory
bind C-s command-prompt -p "Rename active session to: " "run-shell 'tms rename %1'"
# automatically generate missing worktree windows for the active session or a provided session_name.
bind C-r "run-shell 'tms refresh'"
###########
# TMS END #
###########

# scroll limit
set -g history-limit 10000

if-shell "test -f ~/.tmux/local" "source-file ~/.tmux/local"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
