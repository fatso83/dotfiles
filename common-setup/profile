# vim: ft=sh
# WARNING: This file is just read ONCE on login (at least on Linux, not sure about BSD/macOS)
# That means it and any changes will not be read in the current session and will 
# need to be manually sourced in the first time, or until you logout and in again.
#export DEBUG=1

# include selfmade binaries and scripts
# Needed for some of the utility functions in this rc file, therefore 
# cannot be in the profile file, which is read later on
# Otherwise, we will for instance get "millis: command not found" on
# every new terminal, even though it is found on the CLI when testing
_paths=(
     "${HOME}/bin"              # Include selfmade binaries and scripts
     "${HOME}/.rvm/bin"         # Add Ruby/RVM stuff
     "${HOME}/.pystartup"       # Add Python stuff
     "${HOME}/.local/bin"       # Add Python binaries
     "${HOME}/.cargo/bin"       # Add Rust stuff
     "${HOME}/.go"               # Add Go stuff
     "${HOME}/.go/bin"
     "${HOME}/.yarn/bin"        # Node stuff
     "${HOME}/.config/yarn/global/node_modules/.bin"
     "${HOME}/.symfony/bin"     # Symfony
     "${HOME}/.sdkman"          # SDK  
 ); update-path "${_paths[@]}"

# @see http://stackoverflow.com/questions/3601515/how-to-check-if-a-variable-is-set-in-bash
source $HOME/.bash.d/core_utils # clearly not portable across shells, but should be easy to port

timer_start_if_unset
t_debug "Reading .profile"

export VISUAL='vim'
export EDITOR='vim'
export PYTHONSTARTUP="$HOME/.pystartup"
export MAVEN_OPTS="-Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss,SSS \
                   -Dorg.slf4j.simpleLogger.showDateTime=true" 

# Ruby/RVM stuff

[ -s "$HOME/.rvm/scripts/rvm" ] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# Python binaries


if [ "$0" = "/usr/sbin/lightdm-session" -a "$DESKTOP_SESSION" = "i3" ]; then
    export $(gnome-keyring-daemon --start --components=ssh)
fi



# Add Go stuff
export GOPATH=$HOME/.go
export PATH="$GOPATH/bin:$HOME/.go/bin:$PATH"

# SDKMAN

[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# Local overrides
if [ -f "$HOME/.profile.local" ]; then
    t_debug "Reading local profile overrides"
    . "$HOME/.profile.local"
fi

if [[ "$PUPPETEER_EXECUTABLE_PATH" != "" ]]; then
    export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
else
    echo "PUPPETEER_EXECUTABLE_PATH is unset" # I _think_ this makes sense on headless as well?
fi

t_debug ".profile PATH=$PATH"

if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
        . "$HOME/.bashrc"
    fi
fi
