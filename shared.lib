# vi: ft=bash

# since this is sourced from ANYWHERE, we need to know the root to be able to 
# source other files


error(){
    if ! command -v dark_red; then
        printf "ERROR: %s\n" "$@" >> /dev/stderr
    else
        printf "ERROR: %s\n" "$(dark_red "$@")" >> /dev/stderr
    fi
    exit 1
}

if [[ "$ROOT" == "" ]]; then
    error "Missing ROOT environment variable (in ${BASH_SOURCE[0]}). Should point to git repo root"
    return 1
fi

BASH_D="$ROOT/common-setup/bash.d"
BIN_DIR="$ROOT/utils/scripts"
source "$BASH_D/colors"
source "$BASH_D/aliases_functions"
shopt -s expand_aliases

mkdir_if_not_exist(){
    if [[ ! -e "$1" ]]; then mkdir "$1"; fi
}

download_if_not_exist(){
    local url="$1"
    local file="$2"

    if [[ ! -e $file ]]; then
        curl -s --fail -L -o "$file" "$url"
    fi
}

# header1
h1() {
    printf "%s\n" "$(green "$@")"
}

h2(){
    printf "%s\n" "$(blue "$@")"
}

h3(){
    printf "%s %s\n" "-->" "$(blue "$@")"
}

info(){
    printf "%s\n" "$(pink "$@")"
}

warn(){
    printf "%s\n" "$(dark_yellow "$@")" >> /dev/stderr
}

banner(){
    printf "\n################################################################################\n"
    printf "##    %s\n" "$(dark_red "$@")"
    printf "################################################################################\n"
}

fail(){
    banner "$@"
    exit 1
}


add_1password_identity_agent_ssh_config(){
    if ! grep IdentityAgent.*1password/agent.sock ~/.ssh/config > /dev/null; then 
        h2 "Configuring 1Password as SSH Agent"
        cat >> ~/.ssh/config << EOF

Host *
  IdentityAgent ~/.1password/agent.sock

EOF
    fi
}
