#!/bin/bash
# Script to fetch the required secrets

set -e
DEFAULT_FILE="deploy/values.yaml"
DEFAULT_VAULT=tandn-qa-8yi

usage(){
    echo
    echo "Fetch all required secrets for using this software"
    echo
    echo "USAGE: $0 [--file secrets.yml] [--vault]"
    echo
    echo "Options"
    echo "    --file  Set the file used for fetching secrets. If none is given"
    echo "            the default used is $DEFAULT_FILE"
    echo "    --vault Set the vault used for fetching secrets. If none is given"
    echo "            the default used is $DEFAULT_VAULT"
    exit 1
}

dependencies(){
    command -v jq > /dev/null || (printf "This script requires the jq command to back the yq command: \n\
        brew install jq" && exit 1)
    command -v yq > /dev/null || (printf "This script requires the yq command to parse YAML: \n\
        brew install python-yq" && exit 1)
}

process-entry(){
    local file="$1"
    local key="$2"
    local value=$(yq --raw-output ".secrets["$key"]" $file)

    local secret=$(az keyvault secret show   --vault-name "$VAULT" --name $value | jq .value)

    printf "%s\n" "$key => $secret"
}

# arg1: filename
main(){
    printf "Processing $1 using keyvault \"$2\"\n\n"

    local file="$1"
    local keys=($(yq '.secrets | keys[]' $file)) # bash array


    for key in ${keys[@]}; do
        process-entry $file "$key"
    done
}


dependencies

# process args

FILE=$DEFAULT_FILE
VAULT=$DEFAULT_VAULT
while [[ $# > 0 ]] ; do
    #echo processing $# arguments
    case $1 in
        --file)
            FILE=$2
            ;;
        --vault)
            VAULT=$2
            ;;
        *)
            usage
            ;;
    esac
    shift 2
done

main $FILE $VAULT
